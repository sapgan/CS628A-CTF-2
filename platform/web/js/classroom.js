// Generated by CoffeeScript 1.12.5
(function() {
  var addHoverLabel, createGroup, createGroupSetup, deleteGroup, drawTeamSolvedVisualization, groupRequest, loadGroupInfo, loadGroupManagement, loadTeamSelection, renderGroupInformation, renderTeamSelection, teamSelectionHandler;

  renderGroupInformation = _.template($("#group-info-template").remove().text());

  renderTeamSelection = _.template($("#team-selection-template").remove().text());

  google.load('visualization', '1.0', {
    'packages': ['corechart']
  });

  this.groupListCache = [];

  addHoverLabel = function(target, container, message) {
    return $(target).load(function() {
      var gridLabel, gridLabelBottom, gridLabelTop;
      gridLabel = $("<div>").text(message).width(target.width());
      container.append(gridLabel);
      gridLabel.css("top", (target.height() / 2 - gridLabel.height() / 2 + target.position().top) + "px").addClass("hover-label");
      gridLabel.css("left", target.css("left"));
      gridLabelBottom = $("<div>").addClass("fuzzy-top").width(target.width());
      gridLabelBottom.css("left", target.css("left"));
      gridLabelBottom.css("top", (gridLabel.position().top - 15) + "px").height(15);
      container.append(gridLabelBottom);
      gridLabelTop = $("<div>").addClass("fuzzy-bottom").width(target.width());
      gridLabelTop.css("left", target.css("left")).height(15);
      gridLabelTop.css("top", (gridLabel.position().top + gridLabel.outerHeight()) + "px").height(15);
      return container.append(gridLabelTop);
    });
  };

  teamSelectionHandler = function(e) {
    var tid;
    tid = $(e.target).data("tid");
    return apiCall("GET", "/api/stats/team/solved_problems", {
      tid: tid
    }).done(function(data) {
      var elementString;
      if (data.status === 1) {
        return drawTeamSolvedVisualization(data.data, tid);
      } else {
        elementString = "#" + tid + ">.panel-body>div>.team-visualizer";
        $(elementString).empty();
        $(elementString).append("<img id='graph-placeholder-" + tid + "' class='faded-chart' src='img/classroom_graph.png'>");
        return addHoverLabel($("#graph-placeholder-" + tid), $(elementString), "Once the competition starts, you'll be able to check out the progress of the team here.");
      }
    });
  };

  loadTeamSelection = function(gid) {
    return apiCall("GET", "/api/group/member_information", {
      gid: gid
    }).done(function(data) {
      ga('send', 'event', 'Group', 'LoadTeacherGroupInformation', 'Success');
      $("#team-selection").html(renderTeamSelection({
        teams: data.data
      }));
      $(".team-visualization-enabler").on("click", function(e) {
        return teamSelectionHandler(e);
      });
    });
  };

  drawTeamSolvedVisualization = function(teamData, tid) {
    var chart, graphData, members, options, packagedData, users, visualElementString;
    members = _.keys(teamData.members);
    users = ["users"].concat(members, "Unsolved", {
      role: 'annotation'
    });
    graphData = [users];
    _.each(teamData.problems, function(problems, category) {
      var categoryData, solvedSet;
      categoryData = [category];
      solvedSet = [];
      _.each(teamData.members, function(solved, member) {
        var userSolved;
        userSolved = _.intersection(solved, problems);
        categoryData.push(userSolved.length);
        return solvedSet = _.union(solvedSet, userSolved);
      });
      categoryData.push(_.difference(problems, solvedSet).length);
      categoryData.push('');
      return graphData.push(categoryData);
    });
    packagedData = google.visualization.arrayToDataTable(graphData);
    options = {
      height: 400,
      legend: {
        position: 'top',
        maxLines: 3
      },
      bar: {
        groupWidth: '75%'
      },
      isStacked: true,
      colors: ["#2FA4F0", "#B9F9D0", "#2E5CC0", "#8BADE0", "#E6BF70", "#CECFF0", "#30A0B0"],
      series: {},
      title: "Problem Overview"
    };
    options.series[members.length] = {
      color: "black",
      visibleInLegend: false
    };
    visualElementString = "#" + tid + ">.panel-body>div>.team-visualizer";
    chart = new google.visualization.ColumnChart(_.first($(visualElementString)));
    return chart.draw(packagedData, options);
  };

  createGroupSetup = function() {
    var formDialogContents;
    formDialogContents = _.template($("#new-group-template").html())({});
    return formDialog(formDialogContents, "Create a New Class", "OK", "new-group-name", function() {
      return createGroup($('#new-group-name').val());
    });
  };

  loadGroupManagement = function(groups, showFirstTab, callback) {
    $("#group-management").html(renderGroupInformation({
      data: groups
    }));
    $("#new-class-tab").on("click", function(e) {
      return createGroupSetup();
    });
    $("#new-class-button").on("click", function(e) {
      return createGroupSetup();
    });
    $("#class-tabs").on('shown.bs.tab', 'a[data-toggle="tab"]', function(e) {
      var groupName, tabBody;
      tabBody = $(this).attr("href");
      groupName = $(this).data("group-name");
      return apiCall("GET", "/api/group/member_information", {
        gid: $(this).data("gid")
      }).done(function(teamData) {
        ga('send', 'event', 'Group', 'LoadTeacherGroupInformation', 'Success');
        return apiCall("GET", "/api/user/status", {}).done(function(userData) {
          $(tabBody).html(renderTeamSelection({
            teams: teamData.data,
            groupName: groupName,
            userStatus: userData.data
          }));
          return $(".team-visualization-enabler").on("click", function(e) {
            return teamSelectionHandler(e);
          });
        });
      });
    });
    if (showFirstTab) {
      $('#class-tabs a:first').tab('show');
    }
    $("#group-request-form").on("submit", groupRequest);
    $(".delete-group-span").on("click", function(e) {
      return deleteGroup($(e.target).data("group-name"));
    });
    if (callback) {
      return callback();
    }
  };

  loadGroupInfo = function(showFirstTab, callback) {
    return apiCall("GET", "/api/group/list", {}).done(function(data) {
      switch (data["status"]) {
        case 0:
          apiNotify(data);
          return ga('send', 'event', 'Group', 'GroupListLoadFailure', data.message);
        case 1:
          window.groupListCache = data.data;
          return loadGroupManagement(data.data, showFirstTab, callback);
      }
    });
  };

  createGroup = function(groupName) {
    return apiCall("POST", "/api/group/create", {
      "group-name": groupName
    }).done(function(data) {
      if (data['status'] === 1) {
        closeDialog();
        ga('send', 'event', 'Group', 'CreateGroup', 'Success');
        apiNotify(data);
        return loadGroupInfo(false, function() {
          return $('#class-tabs li:eq(-2) a').tab('show');
        });
      } else {
        ga('send', 'event', 'Group', 'CreateGroup', 'Failure::' + data.message);
        return apiNotifyElement($("#new-group-name"), data);
      }
    });
  };

  deleteGroup = function(groupName) {
    return confirmDialog("You are about to permanently delete this class. This will automatically remove your students from this class. Are you sure you want to delete this class?", "Class Confirmation", "Delete Class", "Cancel", function() {
      return apiCall("POST", "/api/group/delete", {
        "group-name": groupName
      }).done(function(data) {
        apiNotify(data);
        if (data['status'] === 1) {
          ga('send', 'event', 'Group', 'DeleteGroup', 'Success');
          return loadGroupInfo(true);
        } else {
          return ga('send', 'event', 'Group', 'DeleteGroup', 'Failure::' + data.message);
        }
      });
    }, function() {
      return ga('send', 'event', 'Group', 'DeleteGroup', 'RejectPrompt');
    });
  };

  groupRequest = function(e) {
    var groupName;
    e.preventDefault();
    groupName = $("#group-name-input").val();
    return createGroup(groupName);
  };

  $(function() {
    loadGroupInfo(true);
  });

}).call(this);
